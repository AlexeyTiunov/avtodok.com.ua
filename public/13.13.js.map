{"version":3,"sources":["webpack:///./app/order_list.js"],"names":["ReactDOM","require","React","dataConvert","handleData","formatNumber","addSuffix","defineColumnName","defineColumnClass","defineTd","parceDate","mapObject","ID","functions","params","ORDER_ID","DATE_INSERT","BRAND","REGIONCODE","ARTICLE","NAME","QUANTITY","PRICE","ORDER_PRICE","ITEMSTATUS","ITEMSTATUSQUANTITY","ITEMSTATUS2","ITEMSTATUSQUANTITY2","ITEMSTATUSCHANGEQUERY","QUANTITYCHANGEQUERY","SHIPPING_DOCUMENT","ISRETURNABLE","DELIVERYMETHODTOUA","WAREHOUSEDATE","action","addNew","state","ThemeContext","regTD","regTDStatus","Order_list","findMySelf","Prom","handleDT","mapArray","shouldComponentUpdate","App","$","nextProps","nextState","getOrderListData","prevProps","prevState","otherTd","setTimeout","names","mas","tr","Name","tableHead","rows","i","tableBody","item","Extends","Orderid_td","e","func","getWorkPage","componentSwitch","componentSwitchPath","fValue","Name_td","article","br","window","Common_td","Quantity_td","Status_td","alert","state2","Number","funcName","value","actionTd","dataForAction","updateFromOtherTD","Action_td_old","basketId","data","updateIcon","answer","isNaN","inWait","getItemStatusChangeQueryComponent","ItemStatusChange_Query","ItemStatusChangeQuery","itemStatusChangeQuery","changeQueryArray","statusToChange","answerStatus","dateArr","date","statusTd","dataForStatus","Action_td","Order_Action"],"mappings":"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","file":"13.13.js","sourcesContent":["var ReactDOM = require('react-dom');\nvar React = require('react'); \nimport {Link, BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {Extends} from './main_component.js';\nimport {handleData} from './data_convert.js'\nimport {TablesDatatables} from './js/pages/tablesDatatables.js'\nimport {App} from './js/app.js';   \nimport {Order_Action} from './order_action_status.js'\nimport {ItemStatusChange_Query} from './order_action_status.js'\n\n\nfunction getMapObject()\n{\n   \n    dataConvert = new handleData(null,null); \n   var formatNumber=dataConvert.formatNumber;\n   var addSuffix=dataConvert.addSuffix;\n   var defineColumnName=dataConvert.defineColumnName;\n   var defineColumnClass=dataConvert.defineColumnClass; \n   var defineTd=dataConvert.defineTd;\n   var parceDate=dataConvert.parceDate;\n   \n  \n    \n    \n    var mapObject=\n    { \n\t  ID:{functions:{},params:[]}, // BASKET_ID\n      ORDER_ID:{functions:{defineColumnName,defineTd},params:[\"Зам-ня\",<Orderid_td/>,]},\n      DATE_INSERT:{functions:{parceDate,defineColumnClass,defineColumnName,defineTd},params:[\"\",\"hidden-xs\",\"Дата\",<Common_td />]},\n      BRAND:{functions:{defineColumnName,defineColumnClass,defineTd},params:[\"Бренд\",\"hidden-xs\",<Common_td />,]}, \n      REGIONCODE:{functions:{defineColumnName,defineColumnClass,defineTd},params:[\"Регион\",\"hidden-xs hidden-sm hidden-md\",<Common_td />,]}, \n      ARTICLE:{functions:{defineColumnName,defineColumnClass,defineTd},params:[\"Номер\",\"hidden-xs hidden-sm hidden-md\",<Common_td />,]}, \n      NAME:{functions:{defineColumnName,defineColumnClass,defineTd},params:[\"Найм-ня\",\"\",<Name_td />,]},\n      QUANTITY:{functions:{defineColumnName,defineColumnClass,defineTd},params:[\"Количество\",\"hidden-xs\",<Common_td/>,]},\n      PRICE:{functions:{formatNumber,defineColumnName,defineColumnClass,defineTd},params:[[\".\",\"2\"],\"Ціна\",\"hidden-xs\",<Common_td />,]}, \n      ORDER_PRICE:{functions:{defineColumnName,defineColumnClass,defineTd},params:[\"Сума\",\"hidden-xs\",<Common_td />,]},\n      ITEMSTATUS:{functions:{},params:[]},\n      ITEMSTATUSQUANTITY:{functions:{},params:[]},\n      ITEMSTATUS2:{functions:{},params:[]},\n\t  ITEMSTATUSQUANTITY2:{functions:{},params:[]},\n\t  ITEMSTATUSCHANGEQUERY:{functions:{},params:[]},\n\t  QUANTITYCHANGEQUERY:{functions:{},params:[]},\n\t  SHIPPING_DOCUMENT:{functions:{},params:[]},\n\t  ISRETURNABLE:{functions:{},params:[]},\n\t  DELIVERYMETHODTOUA:{functions:{},params:[]},\n\t  WAREHOUSEDATE:{functions:{},params:[]},\n      action:{functions:{defineColumnName,defineColumnClass,defineTd},params:[\"Дія\" ,\" \", <Action_td />,],addNew:true},\n      state:{functions:{defineColumnName,defineTd},params:[\"Статус\",<Status_td />,],addNew:true},\n        \n        \n        \n        \n        \n    }\n   return mapObject;\n}\n\n\n\n\n\n\n//\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \n\nconst ThemeContext = React.createContext(\"value\");  \nvar regTD={};\nvar regTDStatus={};\n\nexport class Order_list extends Extends\n{\n    constructor(props)\n    {\n        super(props);\n        this.state.mapArray=[]; \n    }\n    \n    getOrderListData()\n    {\n        var findMySelf=this.findMySelf(this.constructor.name);\n         var Prom=this.makeRequestToRecieveDataAsyncNewObject(\"POST\",\"/ws/order_list.php\",this.makePostDataFromState())\n         \n         Prom.then(function(responseText){\n             try\n\t\t\t {\n\t\t\t   handleDT=new handleData(responseText,getMapObject());\n               findMySelf().setState({mapArray:handleDT.mapArray,shouldComponentUpdate:true}); \n\t\t\t }catch(e)\n\t\t\t {\n\t\t\t\t //findMySelf().cleanData();\n\t\t\t\t //var Element=ReactDOM.findDOMNode(findMySelf());\n\t\t\t\t// ReactDOM.unmountComponentAtNode(Element);\n\t\t\t }\n             \n         })\n    }\n\tcleanData()\n\t {\n\t\t this.setState({mapArray:[],shouldComponentUpdate:true});\n\t }\n    initOrderList() {\n            /* Initialize Bootstrap Datatables Integration */\n            App.datatables();\n            if ( $.fn.dataTable.isDataTable( '#example-datatable' ) ) \n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t $('[data-toggle=\"tooltip\"]').tooltip();\n            /* Initialize Datatables */\n            $('#example-datatable').dataTable({\n\t\t\t\"order\": [[ 0, 'desc' ]],\n                \"aoColumnDefs\": [ { \"bSortable\": false, \"aTargets\": [ 1, 5 ] } ],\n                \"iDisplayLength\": 10,\n                \"aLengthMenu\": [[10, 20, 30, -1], [10, 20, 30, \"Всі\"]]\n            });\n             \n\t\t\t  $('.pagination').on( 'click', function () \n\t\t\t  {\n\t\t\t\t  $('[data-toggle=\"tooltip\"]').tooltip();\n\t\t\t  })\n\t\t\t \n            /* Add placeholder attribute to the search input */\n            $('.dataTables_filter input').attr('placeholder', 'Пошук');\n        }\n\t  initToolTip()\n\t  {\n\t\t   $('[data-toggle=\"tooltip\"]').tooltip();\n\t  }\t  \n    /////////////////////////////////////\n\t shouldComponentUpdate(nextProps, nextState)\n\t {\n\t\t  if (!nextState.shouldComponentUpdate  )\n          {\n             var getOrderListData=function(){ this.getOrderListData();}\n\t\t     getOrderListData=getOrderListData.bind(this);\t\t\n\t\t     getOrderListData();\n                \n          } \n          \n          \n          return nextState.shouldComponentUpdate;\n\t }\n    componentDidUpdate(prevProps, prevState)\n    {  \n        super.componentDidUpdate(prevProps, prevState);\n\t\tfor (state in regTDStatus)\n\t\t{\n\t\t\tregTDStatus[state].setState({otherTd:null});\n\t\t}\n\t\tfor (action in regTD)\n\t\t{\n\t\t\tregTD[action].setState({otherTd:null})\n\t\t}\n\t\tif (this.state.mapArray.length!=0)\n\t\t{\n\t\t\tthis.initOrderList();\t    \n\t\t    this.deActivateProgressBar();\n\t\t}\n\t\t\n\t\tsetTimeout(this.initToolTip,5000);\n       \n    }\n    componentDidMount()\n    {   \n        super.componentDidMount();\n\t\t/*var getOrderListData=function(){ this.getOrderListData();}\n\t\tgetOrderListData=getOrderListData.bind(this);\t\t\n\t\tgetOrderListData();*/\n\t\tthis.setState({shouldComponentUpdate:false});\n\t\t \n       \n\t\t//TablesDatatables.init();\n\t\t//this.setState({twiceUpdated:true,shouldComponentUpdate:true});\n\t\t//TablesDatatables.init();\n\t\t\n        //\n    }\n    render()\n    {\n        var names=this.state.mapArray.map(function(tr) \n                           {\n                               var mas=[];\n                             for (th in tr)\n                             {\n                                if (tr[th].Name)\n                                mas.push(<th className={\"text-center\"+\" \"+(tr[th].className!=undefined)?tr[th].className:\"\" }>{tr[th].Name}</th>);\n                             } \n                              \n                             return mas;\n                              \n                             //return <th className=\"text-center\">{item.Name}</th> \n                           })[0];  \n               const tableHead= (  <thead>\n                                    <tr>\n                                    {\n                                     names  \n                                    } \n                                    </tr>\n                                </thead> )\n                                \n                                \n                 var rows=this.state.mapArray.map(function(tr) \n                           {\n                               var mas=[];\n                             for (td in tr)\n                             {\n                                \n                                mas.push(tr[td].TD)\n                             } \n                              \n                             return mas;\n                              \n                             //return <th className=\"text-center\">{item.Name}</th> \n                           });\n              \n                                \n                          var i=0;\n               const tableBody= rows.map(function(item){                                  \n\t\t\t                      i++;\n                                  return (  <ThemeContext.Provider value={i}><tr key={i}>{item}</tr>  </ThemeContext.Provider>)  \n                                   })                  \n        \n        return (  \n\t\t          <div className=\"block full\">\n                     <div className=\"block-title\" style={{\"backgroundColor\":\"white\"}}>\n                       <div className=\"table-responsive \">\n                           <table id=\"example-datatable\" className=\"table table-vcenter table-condensed table-bordered table-striped\">\n                                {tableHead}                   \n                                   <tbody>\n                                    {tableBody}                                   \n                                  </tbody>\n                           \n                           </table>\n            \n                        </div>\n                    </div>\n                 </div>\n              \n               )\n        \n        \n    }\n    \n    \n}\nexport class Orderid_td extends Extends \n{\n    constructor(props) \n     {  \n        super(props);\n        this.state=this.props;\n        this.onclick=this.onclick.bind(this);\n     } \n\t onclick_old()\n\t {\n\t\t this.activateProgressBar();\n\t }\n\t onclick(e)\n\t {\n\t\t \n\t\t var func = function (moduleWebPath,component)\n\t\t {\n\t\t\t this.activateProgressBar();\n\t\t\t getWorkPage().setState({componentSwitch:component,componentSwitchPath:moduleWebPath});\n\t\t }\n\t\t func=func.bind(this);\n\t\t this.loadNeedModule(e.currentTarget.pathname,func);\n\t }\n     render()\n     {\n         return (\n          \n                  <td className={this.state.proto[this.state.NAME].className+\" text-center\" }>\n\t\t\t\t  <Link onClick={this.onclick} to={\"/order_detail/\"+this.state.proto[this.state.NAME].fValue}>\n\t\t\t\t  {this.state.proto[this.state.NAME].fValue}</Link><br/>\t\t\t\t  \n\t\t\t\t  </td>  \n          \n          \n                )\n     }\n    \n}\nexport class Name_td extends Extends \n{\n    constructor(props) \n     {  \n        super(props);\n        this.state=this.props;\n         \n     } \n\t \n\t \n     render()\n     {\n\t\t var article=\"\";\n\t     var br=\"\";\n\t     if (window.isMobile)\n\t    {\n\t\t article=(this.state.proto[\"ARTICLE\"].fValue);\n\t\t br=<br/>;\n\t    }\n         return (\n          \n                  <td className={this.state.proto[this.state.NAME].className+\" text-center\" }>\t\t\t\t  \n\t\t\t\t  {article}{br}\n\t\t\t\t  {this.state.proto[this.state.NAME].fValue}\n\t\t\t\t  </td>  \n          \n          \n                )\n     }\n    \n}\nexport class Common_td extends Extends\n{\n    \n    constructor(props) \n     {  \n        super(props);\n        this.state=this.props;\n         \n     } \n     render()\n     {\n       return(\n                   <td className={this.state.proto[this.state.NAME].className+\" text-center\" }> \n\t\t\t\t   {this.state.proto[this.state.NAME].fValue}\t\t\t\t   \n\t\t\t\t   \n\t\t\t\t   </td> \n        \n        \n         \n             )   \n         \n         \n     }\n    \n}\n\nexport class Quantity_td extends Extends\n{\n    \n    constructor(props) \n     {  \n        super(props);\n        this.state=this.props;\n      \n         \n     } \n     render()\n     {\n       return(\n                   <td className={this.state.proto[this.state.NAME].className+\" text-center\" }>{this.state.proto[this.state.NAME].fValue}</td> \n        \n        \n         \n             )   \n         \n         \n     }\n    \n}\nexport class Status_td extends Extends\n{\n    \n    constructor(props) \n     {  \n        super(props);\n        this.state=this.props;\n\t\tthis.id=0;\n\t\tthis.state.updateFromOtherTD=false;\n\t\tthis.state.otherTd=null;\n\t\tthis.imagePath='/app/img/order_list/';\n\t\tthis.style={\"width\":\"20px\",\"height\":\"20px\"};\n\t\t\n        this.bClasses=window.configObject[\"Status_td\"].bClasses;\n        this.iClasses={\"2\":\"gi gi-remove_2\"};\n        this.statusNames={\"2\":\"Отказ\"};\n\t\t\n\t\tthis.touchstart=this.touchstart.bind(this);\n         \n     } \n\t touchstart()\n\t {\n\t\t alert(\"www\");\n\t }\n\t getRegTd()\n\t {\n\t\t return regTD;\n\t }\n\t getRegTdStatus()\n\t {\n\t\t return regTDStatus;\n\t }\n\t defineStatus()\n\t {\n\t\t var state=this.state.proto.ITEMSTATUS.fValue;\n\t\t var state2=this.state.proto.ITEMSTATUS.fValue\n\t\t if (state==\"\") return this.getStatusInWork();\n\t\t state=Number(state);\n\t\t switch(state)\n\t\t {\n\t\t\t case 0:\n\t\t\t   return this.getStatusInWork();\n\t\t\t case 1:\n               \treturn \tthis.getStatusPayed();\t \n\t\t\t case 2:\n\t\t\t  return this.getStatusDenided();\n\t\t\t case 3:\n\t\t\t   return this.getStatusInStock();\n\t\t\t case 4:\n\t\t\t   return this.getStatusShipped();\n\t\t\t case 5:\n\t\t\t   return this.getStatusOnTheWay();\n\t\t\t  case 7:\n              \treturn this.getStatusDelayed(); \t  \n\t\t\t default : \n\t\t\t   return this.getNullStatus();\n\t\t }\n\t }\n\t getNullStatus()\n\t {\n\t\t return (<a href='####'>\n\t\t {\"-\"}\n\t\t </a>)\n\t }\t \n\t getStatusInWork()\n\t {   \n\t     \n\t\t return (<a href='####'>\n\t\t  <img title='' src={this.imagePath+\"v_rabote.png\"} style={this.style}/>\n\t\t </a>)\n\t }\n\t getStatusDelayed()\n\t {//otlozhen\n\t     \n\t\t \n\t\t return (<a href='####'>\n\t\t  <img title='' src={this.imagePath+\"otlozhen.png\"} style={this.style}/>\n\t\t </a>)\n\t }\n\t getStatusPayed()\n\t {\n\t\t this.updateActionTd(\"getActionWareHouse\");\n\t\t return (<a href='####'>\n\t\t  <img title='' src={this.imagePath+\"vykuplen.png\"} style={this.style}/>\n\t\t </a>)\n\t }\n\t getStatusDenided()\n\t {\n\t\t /*try{\n\t\t var actionTd=this.getRegTd()[this.id];\n\t     var dataForAction=actionTd.getNullAction();\n\t\t actionTd.setState({updateFromOtherTD:true,otherTd:dataForAction})\n\t\t }catch(e)\n\t\t {}*/\n\t\t this.updateActionTd(\"getNullAction\");\n\t\t return (<a href='####' onTouchStart={this.touchstart}>\n\t\t  <img title='denided' src={this.imagePath+\"otkaz.png\"} style={this.style}/>\n\t\t </a>)\n\t }\n\t getStatusInStock()\n\t {\n\t\t this.updateActionTd(\"getNullAction\");\n\t\t return (<a href='####'>\n\t\t  <img title='' src={this.imagePath+\"sklad.png\"} style={this.style}/>\n\t\t </a>)\n\t }\n\t getStatusShipped()\n\t {\n\t\t this.updateActionTd(\"getNullAction\");\n\t\t return (<a href='####'>\n\t\t  <img title='' src={this.imagePath+\"otgruzhen.png\"} style={this.style}/>\n\t\t </a>)\n\t }\n\t getStatusOnTheWay()\n\t {\n\t\t this.updateActionTd(\"getActionWareHouse\",'');\n\t\t return (<a href='####'>\n\t\t  <img title='' src={this.imagePath+\"method_sea.png\"} style={this.style}/>\n\t\t </a>)\n\t }\n\t getStatusUserDenyApproved()\n\t {\n\t\t return (<a href='####'>\n\t\t  <img title='' src={this.imagePath+\"user_deny.png\"} style={this.style}/>\n\t\t </a>)\n\t }\n\t updateActionTd(funcName,value)\n\t {   \n\t\t try{\n\t\t    var actionTd=this.getRegTd()[this.id];\n\t        var dataForAction=actionTd[funcName](value);\n\t\t   actionTd.setState({updateFromOtherTD:true,otherTd:dataForAction})\n\t\t   }catch(e)\n\t\t {\n\t\t\t \n\t\t }\n\t }\n\t \n\t ////////////////////////////////////////////////////\n     render()                                                                      // <td className={\"text-center\"+\" \"+this.state.proto.action.className+\" \"+this.bClasses[this.state.proto.ITEMSTATUS.fValue]} >{this.state.proto.ITEMSTATUS.fValue}</td>  \n     {\n       /*return(\n                 \n                     <td><span className={this.bClasses[this.state.proto.ITEMSTATUS.fValue]}><i className={this.iClasses[this.state.proto.ITEMSTATUS.fValue]}></i>{this.statusNames[this.state.proto.ITEMSTATUS.fValue]}</span></td> \n                                       \n                   \n         \n             )*/   \n\t\t\tvar state= null;\n\n\t\t\t//state=this.defineStatus();\n\t\t\t  \n         if (\"updateFromOtherTD\" in this.state)\n\t\t{\n\t\t\tif (this.state.updateFromOtherTD)\n\t\t\t{\n\t\t\t\t state=this.state.otherTd;\n\t\t\t}else\n\t\t\t{\n\t\t\t\t state=this.defineStatus();\n\t            \n\t\t\t}\n\t\t}else\n\t\t{\n\t\t\tstate=this.defineStatus();\n\t\t}      \n\t\t\t\n\t\t\t/*return  (\n\t\t\t          <td className={this.bClasses[this.state.proto.ITEMSTATUS.fValue]}>{state}</td>\n\t\t\t        )*/\n\t\t\treturn (\n\t\t\t          <ThemeContext.Consumer>\n\t\t\t\t\t  {\n\t\t\t\t\t\t  function(id)\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t  this.id=id;\n\t\t\t\t\t\t\t  this.getRegTdStatus()[id]=this;\n\t\t\t\t\t\t\t  return (<td className={this.getRangeObjectValue(this.bClasses,this.state.proto.ITEMSTATUS.fValue)}>{state}</td>)\n\t\t\t\t\t\t  }.bind(this)\n\t\t\t\t\t  }\n\t\t\t\t\t  \n\t\t\t\t\t  </ThemeContext.Consumer>\n\t\t\t\n\t\t\t       )\n\t\t\t \n         \n         \n     }\n    \n}  \nexport class Action_td_old extends Extends\n{\n    \n    constructor(props) \n     {  \n        super(props);\n        this.state=this.props;\n\t\tthis.state.updateFromOtherTD=false;\n\t\tthis.state.otherTd=null;\n        this.bClasses=window.configObject[\"Action_td\"].bClasses\n        this.style={\"width\":\"20px\",\"height\":\"20px\"};\n       // this.bClasses={\"2\":\"label label-primary\" };\n        this.iClasses={\"2\":\"gi gi-remove_2\"};\n        this.statusNames={\n            \"0\":\"В работе\",\n            \"2\":\"Отказ\",\n            \"5\": \"В пути\",\n        };\n\t\tthis.imagePath='/app/img/order_list/';\n\t\t\n\t\tthis.itemStatusChangeQuery=this.itemStatusChangeQuery.bind(this)\n         \n     } \n\t itemStatusChangeQueryOld(e)\n\t {\n\t\t // /ws/ItemStatusChangeQuery.php\n\t\t var basketId=this.state.proto.ID.fValue;\n\t\t var data =\"BASKET_ID=\"+basketId+\"&STATUS_CODE=2\";\n\t\t var Prom=this.makeRequestToRecieveDataAsyncNewObject(\"POST\",\"/ws/ItemStatusChangeQuery.php\",data);\n\t\t \n\t\t var updateIcon=function(responseText)\n\t\t    {\n\t\t\t  try\n\t\t\t  {\n\t\t\t\t  var answer= Number(responseText);\n\t\t\t\t  if (!isNaN(answer) && answer>0)\n\t\t\t\t  {\n\t\t\t\t\t var inWait= this.getActionQueryStatusChangeInWait();\n\t\t\t\t\t this.setState({updateFromOtherTD:true,otherTd:inWait})\n\t\t\t\t  }else{\n\t\t\t\t\t  this.showInforMassage(\"ERROR\",\"Операция не прошла\");\n\t\t\t\t  }\n\t\t\t  }catch(e)\n\t\t\t  {\n\t\t\t\t  this.showInforMassage(\"ERROR\",\"Операция не прошла\");\n\t\t\t  }\n\t\t\t\t\n\t\t\t \n\t\t\t \n\t\t    }.bind(this)\n\t\t    \n\t\t Prom.then(updateIcon)\n\t\t  \n\t\t  \n\t\t \n\t\t \n\t }\n\titemStatusChangeQuery(e)\n\t{   this.clearInforMassage();\n\t\tgetItemStatusChangeQueryComponent=function()\n\t\t{\n\t\t\tItemStatusChange_Query.actionComponent=this;\n\t\t\treturn ItemStatusChange_Query;\n\t\t}.bind(this)\n\t\tvar ItemStatusChangeQuery=getItemStatusChangeQueryComponent();\n\t\t\n\t\tthis.showInforMassage(\"Інфо\",<ItemStatusChangeQuery / >)\n\t}\n\tgetRegTd()\n\t {\n\t\t return regTD;\n\t }\n\t getRegTdStatus()\n\t {\n\t\t return regTDStatus;\n\t }\n\t defineAction()\n\t {\n\t\t \n\t\t var itemStatusChangeQuery=this.state.proto.ITEMSTATUSCHANGEQUERY.fValue;\n\t\t\tif (itemStatusChangeQuery==\"\") return this.getActionCanQueryStatusChange();\n\t\t\tchangeQueryArray=itemStatusChangeQuery.split(/#/);\n\t\t\tif (changeQueryArray.length!=2) return this.getActionCanQueryStatusChange();\n\t\t\tvar statusToChange=changeQueryArray[0];\n\t\t\tvar answerStatus=changeQueryArray[1];\n\t\t\tif (answerStatus==\"?\") return this.getActionQueryStatusChangeInWait();\n\t\t\telse if(answerStatus==\"X\") return this.getActionQueryStatusChangeDined();\n\t\t\telse if (statusToChange==answerStatus) return this.getActionQueryStatusChangeApproved();\n\t\t\telse return this.getNullAction();\n\t\t\t\n\t\t\t\n\t\t \n\t\t \n\t }\n\t getNullAction()\n\t {\n\t\t return (<a href='####'>-</a>);\n\t }\n\t getActionCanQueryStatusChange()\n\t {\n\t\t return ( <a href='####'  onClick={this.itemStatusChangeQuery}>\n\t\t   <img style={this.style} title='' src={this.imagePath+\"user_button_cancel.png\"} />\n\t\t </a>)\n\t }\n\t \n\t getActionQueryStatusChangeInWait()\n\t {\n\t\t return ( <a >\n\t\t   <img  style={this.style} title='' src={this.imagePath+\"user_deny_wait.png\"} />\n\t\t </a>)\n\t }\n\t getActionQueryStatusChangeDined()\n\t {\n\t\t return ( <a href='####'>\n\t\t   <img style={this.style} title='' src={this.imagePath+\"v_rabote.png\"} />\n\t\t </a>)\n\t }\n\t  getActionQueryStatusChangeApproved()\n\t  {\n\t\t  this.updateStatus(\"getStatusUserDenyApproved\");\n\t\t return ( <a href='####'>\n\t\t   <img style={this.style} title='' src={this.imagePath+\"user_deny.png\"} />\n\t\t </a>)\n\t  }\n      getActionWareHouse()\n\t  {\n\t\t  var dateArr=this.state.proto.WAREHOUSEDATE.fValue.split(/\\s/);\n\t\t  var date=\"\";\n\t\t  if (dateArr instanceof Array) \n\t\t  {\n\t\t\t  date=dateArr[0];\n\t\t  }\n\t\t  return ( <a href='####'>\n\t\t   <img style={this.style}  data-toggle=\"tooltip\" data-placement=\"top\" data-original-title={date} src={this.imagePath+\"date_come.png\"} />\n\t\t </a>)\n\t  }\n\t  updateStatus(funcName,value)\n\t  {\n\t\t  try{\n\t\t    var statusTd=this.getRegTdStatus()[this.id];\n\t        var dataForStatus=statusTd[funcName](value);\n\t\t   statusTd.setState({updateFromOtherTD:true,otherTd:dataForStatus})\n\t\t   }catch(e)\n\t\t {\n\t\t\t \n\t\t }\n\t\t  \n\t  }\n\t /////////////////////////////////////////////////////////\n\t componentWillUnmount()\n\t {\n\t\t// alert(\"unmounted\"+this.id);\n\t }\n\t shouldComponentUpdate(nextProps, nextState)\n\t {\n\t\t if (\"updateFromOtherTD\" in nextState  )\n\t\t {\n\t\t\t if (nextState.updateFromOtherTD &&(nextState.otherTd==undefined || nextState.otherTd==null))\n\t\t\t {\n\t\t\t\t return false;\n\t\t\t }\n\t\t }\n\t\t return true;\n\t }\n\t componentDidUpdate()\n\t {\n\t\t super.componentDidUpdate();\n\t\t \n\t }\n\t componentDidMount()\n\t {\n\t\t super.componentDidMount()\n\t\t\n\t }\n     render()                                                                      // <td className={\"text-center\"+\" \"+this.state.proto.action.className+\" \"+this.bClasses[this.state.proto.ITEMSTATUS.fValue]} >{this.state.proto.ITEMSTATUS.fValue}</td>  \n     {\n\t\tvar action= null;  \n        if (\"updateFromOtherTD\" in this.state)\n\t\t{\n\t\t\tif (this.state.updateFromOtherTD)\n\t\t\t{\n\t\t\t\t action=this.state.otherTd;\n\t\t\t}else\n\t\t\t{\n\t\t\t\t action=this.defineAction();\n\t            \n\t\t\t}\n\t\t}else\n\t\t{\n\t\t\taction=this.defineAction();\n\t\t}      \n\t         /*return (\n\t\t         <td className={this.state.proto.action.className}>{action}</td>\t\t  \n\t\t         )*/\n\t\t\t\t \n\t\t\t\t return (\n\t\t\t          <ThemeContext.Consumer>\n\t\t\t\t\t  {\n\t\t\t\t\t\t  function(id)\n\t\t\t\t\t\t  {   this.id=id;\n\t\t\t\t\t\t\t  this.getRegTd()[id]=this;\n\t\t\t\t\t\t\t  //return (<td className={this.bClasses[this.state.proto.ITEMSTATUS.fValue]}>{action}</td>)\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t  return (<td  className={this.getRangeObjectValue(this.bClasses,this.state.proto.ITEMSTATUS.fValue)}>{action}</td>)\n\t\t\t\t\t\t  }.bind(this)\n\t\t\t\t\t  }\n\t\t\t\t\t  \n\t\t\t\t\t  </ThemeContext.Consumer>\n\t\t\t\n\t\t\t       )\n\t\t\n\t   /*return(\n                \n               <td className={this.state.proto.action.className}><span className={this.bClasses[this.state.proto.ITEMSTATUS.fValue]}><i className={this.iClasses[this.state.proto.ITEMSTATUS.fValue]}></i>{this.statusNames[this.state.proto.ITEMSTATUS.fValue]}</span></td> \n                   \n         \n             )*/   \n         \n         \n     }\n    \n}              \n\nexport class Action_td extends Order_Action\n{\n    \n    constructor(props) \n     {  \n        super(props);\n        this.state=this.props;\n\t\tthis.state.updateFromOtherTD=false;\n\t\tthis.state.otherTd=null;\n        this.bClasses=window.configObject[\"Action_td\"].bClasses\n        this.style={\"width\":\"20px\",\"height\":\"20px\"};\n       // this.bClasses={\"2\":\"label label-primary\" };\n        this.iClasses={\"2\":\"gi gi-remove_2\"};\n        this.statusNames={\n            \"0\":\"В работе\",\n            \"2\":\"Отказ\",\n            \"5\": \"В пути\",\n        };\n\t\tthis.imagePath='/app/img/order_list/';\n\t\t\n\t\tthis.itemStatusChangeQuery=this.itemStatusChangeQuery.bind(this)\n         \n     } \n\t itemStatusChangeQueryOld(e)\n\t {\n\t\t // /ws/ItemStatusChangeQuery.php\n\t\t var basketId=this.state.proto.ID.fValue;\n\t\t var data =\"BASKET_ID=\"+basketId+\"&STATUS_CODE=2\";\n\t\t var Prom=this.makeRequestToRecieveDataAsyncNewObject(\"POST\",\"/ws/ItemStatusChangeQuery.php\",data);\n\t\t \n\t\t var updateIcon=function(responseText)\n\t\t    {\n\t\t\t  try\n\t\t\t  {\n\t\t\t\t  var answer= Number(responseText);\n\t\t\t\t  if (!isNaN(answer) && answer>0)\n\t\t\t\t  {\n\t\t\t\t\t var inWait= this.getActionQueryStatusChangeInWait();\n\t\t\t\t\t this.setState({updateFromOtherTD:true,otherTd:inWait})\n\t\t\t\t  }else{\n\t\t\t\t\t  this.showInforMassage(\"ERROR\",\"Операция не прошла\");\n\t\t\t\t  }\n\t\t\t  }catch(e)\n\t\t\t  {\n\t\t\t\t  this.showInforMassage(\"ERROR\",\"Операция не прошла\");\n\t\t\t  }\n\t\t\t\t\n\t\t\t \n\t\t\t \n\t\t    }.bind(this)\n\t\t    \n\t\t Prom.then(updateIcon)\n\t\t  \n\t\t  \n\t\t \n\t\t \n\t }\n\titemStatusChangeQuery(e)\n\t{   this.clearInforMassage();\n\t\tgetItemStatusChangeQueryComponent=function()\n\t\t{\n\t\t\tItemStatusChange_Query.actionComponent=this;\n\t\t\treturn ItemStatusChange_Query;\n\t\t}.bind(this)\n\t\tvar ItemStatusChangeQuery=getItemStatusChangeQueryComponent();\n\t\t\n\t\tthis.showInforMassage(\"Інфо\",<ItemStatusChangeQuery / >)\n\t}\n\tgetRegTd()\n\t {\n\t\t return regTD;\n\t }\n\t getRegTdStatus()\n\t {\n\t\t return regTDStatus;\n\t }\n\t defineAction()\n\t {\n\t\t \n\t\t var itemStatusChangeQuery=this.state.proto.ITEMSTATUSCHANGEQUERY.fValue;\n\t\t\tif (itemStatusChangeQuery==\"\") return this.getActionCanQueryStatusChange();\n\t\t\tchangeQueryArray=itemStatusChangeQuery.split(/#/);\n\t\t\tif (changeQueryArray.length!=2) return this.getActionCanQueryStatusChange();\n\t\t\tvar statusToChange=changeQueryArray[0];\n\t\t\tvar answerStatus=changeQueryArray[1];\n\t\t\tif (answerStatus==\"?\") return this.getActionQueryStatusChangeInWait();\n\t\t\telse if(answerStatus==\"X\") return this.getActionQueryStatusChangeDined();\n\t\t\telse if (statusToChange==answerStatus) return this.getActionQueryStatusChangeApproved();\n\t\t\telse return this.getNullAction();\n\t\t\t\n\t\t\t\n\t\t \n\t\t \n\t }\n\t /////////////////////////////////////////////////////////\n\t componentWillUnmount()\n\t {\n\t\t// alert(\"unmounted\"+this.id);\n\t }\n\t shouldComponentUpdate(nextProps, nextState)\n\t {\n\t\t if (\"updateFromOtherTD\" in nextState  )\n\t\t {\n\t\t\t if (nextState.updateFromOtherTD &&(nextState.otherTd==undefined || nextState.otherTd==null))\n\t\t\t {\n\t\t\t\t return false;\n\t\t\t }\n\t\t }\n\t\t return true;\n\t }\n\t componentDidUpdate()\n\t {\n\t\t super.componentDidUpdate();\n\t\t \n\t }\n\t componentDidMount()\n\t {\n\t\t super.componentDidMount()\n\t\t\n\t }\n     render()                                                                      // <td className={\"text-center\"+\" \"+this.state.proto.action.className+\" \"+this.bClasses[this.state.proto.ITEMSTATUS.fValue]} >{this.state.proto.ITEMSTATUS.fValue}</td>  \n     {\n\t\tvar action= null;  \n        if (\"updateFromOtherTD\" in this.state)\n\t\t{\n\t\t\tif (this.state.updateFromOtherTD)\n\t\t\t{\n\t\t\t\t action=this.state.otherTd;\n\t\t\t}else\n\t\t\t{\n\t\t\t\t action=this.defineAction();\n\t            \n\t\t\t}\n\t\t}else\n\t\t{\n\t\t\taction=this.defineAction();\n\t\t}      \n\t         /*return (\n\t\t         <td className={this.state.proto.action.className}>{action}</td>\t\t  \n\t\t         )*/\n\t\t\t\t \n\t\t\t\t return (\n\t\t\t          <ThemeContext.Consumer>\n\t\t\t\t\t  {\n\t\t\t\t\t\t  function(id)\n\t\t\t\t\t\t  {   this.id=id;\n\t\t\t\t\t\t\t  this.getRegTd()[id]=this;\n\t\t\t\t\t\t\t  //return (<td className={this.bClasses[this.state.proto.ITEMSTATUS.fValue]}>{action}</td>)\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t  return (<td  className={this.getRangeObjectValue(this.bClasses,this.state.proto.ITEMSTATUS.fValue)}>{action}</td>)\n\t\t\t\t\t\t  }.bind(this)\n\t\t\t\t\t  }\n\t\t\t\t\t  \n\t\t\t\t\t  </ThemeContext.Consumer>\n\t\t\t\n\t\t\t       )\n\t\t\n\t   /*return(\n                \n               <td className={this.state.proto.action.className}><span className={this.bClasses[this.state.proto.ITEMSTATUS.fValue]}><i className={this.iClasses[this.state.proto.ITEMSTATUS.fValue]}></i>{this.statusNames[this.state.proto.ITEMSTATUS.fValue]}</span></td> \n                   \n         \n             )*/   \n         \n         \n     }\n    \n}              \n\n/*export class ItemStatusChange_Query extends Extends\n{\n\t constructor(props)\n\t {\n\t\t super(props);\n\t\t this.actionComponent=this.constructor.actionComponent;\n\t\t this.itemStatusChangeQuery=this.itemStatusChangeQuery.bind(this);\n\t\t this.answerState=false;\n\t\t this.queryText=\"Чи відправити запит на відмову від позиції?\";\n\t\t this.unMount=this.unMount.bind(this);\n\t\t \n\t }\n\t itemStatusChangeQuery(e)\n\t {\n\t\t // /ws/ItemStatusChangeQuery.php\n\t\t var basketId=this.actionComponent.state.proto.ID.fValue;\n\t\t var data =\"BASKET_ID=\"+basketId+\"&STATUS_CODE=2\";\n\t\t var Prom=this.makeRequestToRecieveDataAsyncNewObject(\"POST\",\"/ws/ItemStatusChangeQuery.php\",data);\n\t\t \n\t\t var updateIcon=function(responseText)\n\t\t    {\n\t\t\t  try\n\t\t\t  {\n\t\t\t\t  var answer= Number(responseText);\n\t\t\t\t  if (!isNaN(answer) && answer>0)\n\t\t\t\t  {\n\t\t\t\t\t var inWait= this.actionComponent.getActionQueryStatusChangeInWait();\n\t\t\t\t\t this.actionComponent.setState({updateFromOtherTD:true,otherTd:inWait})\n\t\t\t\t\t this.queryText=\"Запит відправленно.\";\n\t\t\t\t\t \n\t\t\t\t  }else{\n\t\t\t\t\t this.queryText=\"Запит не відправленно.\";\n\t\t\t\t  }\n\t\t\t  }catch(e)\n\t\t\t  {\n\t\t\t\t  this.queryText=\"Запит не відправленно.\";\n\t\t\t  }\n\t\t\t\tthis.answerState=true;\n\t\t\t this.setState({justUpdate:null})\n\t\t\t \n\t\t    }.bind(this)\n\t\t    \n\t\t Prom.then(updateIcon)\n\t\t  \n\t\t  \n\t\t \n\t\t \n\t }\n\t unMount(e)\n\t {\n\t\t var thisElement=ReactDOM.findDOMNode(this);\n\t\t ReactDOM.unmountComponentAtNode(thisElement);\n\t }\n\t /////////////////////////////////////\n\t componentDidMount()\n\t {\n\t\t super.componentDidMount();\n\t\t  this.answerState=false;\n\t\t this.queryText=\"Чи відправити запит на відмову від позиції?\";\n\t\t \n\t }\n\t componentDidUpdate()\n\t {\n\t\t super.componentDidUpdate();\n\t\t  this.answerState=false;\n\t\t this.queryText=\"Чи відправити запит на відмову від позиції?\";\n\t }\n\t render()\n\t {\n\t\t \n\t\t  \n\t\t   var buttons=(\n\t\t                 <div className=\"row\"> \n\t\t                   \n                          <div className=\"col-xs-6 text-left\">\n\t\t\t\t\t\t    <button type=\"button\"  className=\"btn btn-sm btn-default\" data-dismiss=\"modal\"><font><font>{\"  Ні  \"}</font></font></button>\n \t\t\t\t\t\t  </div>\n\t\t\t\t\t\t  <div className=\"col-xs-6 text-right\">\t\t                   \n                            <button type=\"button\" onClick={this.itemStatusChangeQuery}  className=\"btn btn-sm btn-primary\"><font><font>{\"  Так  \"}</font></font></button>\n                          </div>\n                    </div>\t\t\t\t\t\t \n\t\t               )\n\t\t    if (this.answerState)\n\t\t\t{\n\t\t\t   buttons=(<div className=\"col-xs-12 text-right\">\n\t\t\t              <button type=\"button\" onClick={this.unMount} className=\"btn btn-sm btn-default\" data-dismiss=\"modal\"><font><font>Вийти</font></font></button>\t\t\t\t\t\t  \n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t )\n\t\t\t}\t\t\t\t\n\t\t  \n\t\t  return (\n                       <div className=\"modal-dialog\">                     \n                         <div className=\"modal-content\">\n                           <div className=\"modal-header text-center\">\n                              <h2 className=\"modal-title\"><i className=\"fa fa-pencil\"></i><font><font>Запит на відмову від позиції.</font></font></h2>\n                           </div>\n                           <div className=\"modal-body\">\n                             <fieldset>\n                                <legend><font><font>{this.queryText}</font></font></legend>\n                             </fieldset>\n                              <div className=\"form-group form-actions\">\n                                \n\t\t\t\t\t\t\t\t {buttons}\n\t\t\t\t\t\t\t\t                          \n                               </div>\n                             </div>    \n                          <div className=\"modal-footer\">\n                          </div>\n                    \n                        \n                      </div>\n                      </div> \n\t\t )\n\t }\n\t\n}*/\n\n\n"],"sourceRoot":""}